{"ast":null,"code":"// src/services/api.js - Service pour interagir avec l'API\nimport axios from'axios';const API_URL='http://localhost:5000/api';// Créer une instance axios avec la configuration de base\nconst apiClient=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Fonctions pour interagir avec l'API d'authentification\nexport const authService={// Inscription d'un nouvel utilisateur\nregister:async userData=>{try{const response=await apiClient.post('/auth/register',userData);return response.data;}catch(error){console.error('Erreur lors de l\\'inscription:',error);throw error;}},// Connexion d'un utilisateur\nlogin:async credentials=>{try{const response=await apiClient.post('/auth/login',credentials);return response.data;}catch(error){console.error('Erreur lors de la connexion:',error);throw error;}},// Récupérer le profil de l'utilisateur\ngetProfile:async()=>{try{const response=await apiClient.get('/auth/profile');return response.data;}catch(error){console.error('Erreur lors de la récupération du profil:',error);throw error;}}};// Fonctions pour interagir avec l'API des tâches\nexport const taskService={// Récupérer toutes les tâches\ngetAllTasks:async()=>{try{const response=await apiClient.get('/tasks');return response.data;}catch(error){console.error('Erreur lors de la récupération des tâches:',error);throw error;}},// Ajouter une nouvelle tâche\ncreateTask:async taskData=>{try{const response=await apiClient.post('/tasks',taskData);return response.data;}catch(error){console.error('Erreur lors de la création de la tâche:',error);throw error;}}};// Intercepteur pour l'authentification\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));export default apiClient;","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","authService","register","userData","response","post","data","error","console","login","credentials","getProfile","get","taskService","getAllTasks","createTask","taskData","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject"],"sources":["D:/EST/S6/dep/tp1/tp1/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js - Service pour interagir avec l'API\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Créer une instance axios avec la configuration de base\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Fonctions pour interagir avec l'API d'authentification\nexport const authService = {\n  // Inscription d'un nouvel utilisateur\n  register: async (userData) => {\n    try {\n      const response = await apiClient.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de l\\'inscription:', error);\n      throw error;\n    }\n  },\n\n  // Connexion d'un utilisateur\n  login: async (credentials) => {\n    try {\n      const response = await apiClient.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la connexion:', error);\n      throw error;\n    }\n  },\n\n  // Récupérer le profil de l'utilisateur\n  getProfile: async () => {\n    try {\n      const response = await apiClient.get('/auth/profile');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération du profil:', error);\n      throw error;\n    }\n  }\n};\n\n// Fonctions pour interagir avec l'API des tâches\nexport const taskService = {\n  // Récupérer toutes les tâches\n  getAllTasks: async () => {\n    try {\n      const response = await apiClient.get('/tasks');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des tâches:', error);\n      throw error;\n    }\n  },\n\n  // Ajouter une nouvelle tâche\n  createTask: async (taskData) => {\n    try {\n      const response = await apiClient.post('/tasks', taskData);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la création de la tâche:', error);\n      throw error;\n    }\n  }\n};\n\n// Intercepteur pour l'authentification\napiClient.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nexport default apiClient;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,KAAM,CAAAC,OAAO,CAAG,2BAA2B,CAE3C;AACA,KAAM,CAAAC,SAAS,CAAGF,KAAK,CAACG,MAAM,CAAC,CAC7BC,OAAO,CAAEH,OAAO,CAChBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACAC,QAAQ,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,SAAS,CAACQ,IAAI,CAAC,gBAAgB,CAAEF,QAAQ,CAAC,CACjE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAE,KAAK,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAP,SAAS,CAACQ,IAAI,CAAC,aAAa,CAAEK,WAAW,CAAC,CACjE,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAI,UAAU,CAAE,KAAAA,CAAA,GAAY,CACtB,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAP,SAAS,CAACe,GAAG,CAAC,eAAe,CAAC,CACrD,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACjE,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,WAAW,CAAG,CACzB;AACAC,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAP,SAAS,CAACe,GAAG,CAAC,QAAQ,CAAC,CAC9C,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,CAAEA,KAAK,CAAC,CAClE,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAQ,UAAU,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC9B,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAP,SAAS,CAACQ,IAAI,CAAC,QAAQ,CAAEW,QAAQ,CAAC,CACzD,MAAO,CAAAZ,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,CAAEA,KAAK,CAAC,CAC/D,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED;AACAV,SAAS,CAACoB,YAAY,CAACC,OAAO,CAACC,GAAG,CAChCC,MAAM,EAAI,CACR,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACpB,OAAO,CAACwB,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACDb,KAAK,EAAIkB,OAAO,CAACC,MAAM,CAACnB,KAAK,CAC/B,CAAC,CAED,cAAe,CAAAV,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}