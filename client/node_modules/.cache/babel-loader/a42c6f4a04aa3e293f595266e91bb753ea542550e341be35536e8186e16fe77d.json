{"ast":null,"code":"var _jsxFileName = \"D:\\\\EST\\\\S6\\\\dep\\\\tp1\\\\tp1\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [refreshTasks, setRefreshTasks] = useState(false);\n  const handleTaskAdded = () => {\n    // Force TaskList to refresh by toggling the refreshTasks state\n    setRefreshTasks(!refreshTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gestionnaire de Tu00e2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n        onTaskAdded: handleTaskAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, refreshTasks ? 'refresh' : 'initial', false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zMGlIIWOLwW9fkgDb0jMtJeDrqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskList","TaskForm","jsxDEV","_jsxDEV","App","_s","refreshTasks","setRefreshTasks","handleTaskAdded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTaskAdded","_c","$RefreshReg$"],"sources":["D:/EST/S6/dep/tp1/tp1/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport './App.css';\n\nfunction App() {\n  const [refreshTasks, setRefreshTasks] = useState(false);\n\n  const handleTaskAdded = () => {\n    // Force TaskList to refresh by toggling the refreshTasks state\n    setRefreshTasks(!refreshTasks);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Gestionnaire de Tu00e2ches</h1>\n      </header>\n      <div className=\"container\">\n        <TaskForm onTaskAdded={handleTaskAdded} />\n        <TaskList key={refreshTasks ? 'refresh' : 'initial'} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBP,OAAA;MAAQM,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BP,OAAA;QAAAO,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACTX,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBP,OAAA,CAACF,QAAQ;QAACc,WAAW,EAAEP;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1CX,OAAA,CAACH,QAAQ,MAAMM,YAAY,GAAG,SAAS,GAAG,SAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACT,EAAA,CAnBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}